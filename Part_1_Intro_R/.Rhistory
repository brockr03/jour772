install.packages("tidyverse")
install.packages("rio")
install.packages("janitor")
library(tidyverse)
library(rio)
library(janitor)
MediaBucks <- rio::import("https://docs.google.com/spreadsheets/d/1y2w31HHwE31N9pJoIB1W8oWgW7citB4hzjo99XfwVqo/edit#gid=357643135", sheet = "RealMediaSalaries2")
View(MediaBucks)
#head provides a peak at the first six rows of data
head(MediaBucks)
ncol(MediaBucks)
glimpse
glimpse(MediaBucks)
names(MediaBucks)
head(MediaBucks)
summary(MediaBucks$Salary)
sum(MediaBucks$Salary, na.rm=TRUE)
sum(MediaBucks$Salary, na.rm=TRUE)
mean(MediaBucks$Salary, na.rm=TRUE)
MediaBucks %>%
select(Gender, Salary) %>%
group_by(Gender) %>%
summarize(Total = sum(Salary, na.rm=TRUE))
MediaBucks %>%
count(Gender) %>%
arrange(desc(n))
#Using the example code above, create a column called Avg_Salary and use the mean command to produce the calculation
#Adapt the code below to do this:
MediaBucks %>%
select(Salary) %>%
group_by(Salary) %>%
summarize(Total = average(Salary, na.rm=TRUE))
#Using the example code above, create a column called Avg_Salary and use the mean command to produce the calculation
#Adapt the code below to do this:
MediaBucks %>%
select(Salary) %>%
group_by(Salary) %>%
summarize(Total = avg(Salary, na.rm=TRUE))
#Using the example code above, create a column called Avg_Salary and use the mean command to produce the calculation
#Adapt the code below to do this:
MediaBucks %>%
select(Salary) %>%
group_by(Salary) %>%
summarize(Total = mean(Salary, na.rm=TRUE))
MediaSalary <- MediaBucks %>%
filter(Salary >= 1000)
MediaSalary <- MediaBucks %>%
filter(Salary >= 1000)
MediaSalary <- MediaBucks %>%
filter(Salary >= 1000)
WSJ <- subset(MediaBucks, COMPANY=="WallStreetJournal")
View(MediaSalary)
summary(WSJ$Salary)
Journal <- subset(MediaBucks, grepl("?Journal", COMPANY))
Bloom <- subset(MediaBucks, grepl("?Bloomberg", COMPANY))
View(MediaBucks)
View(MediaBucks)
#1: Build a table for NewYorkTimes employees
MediaBucks %>%
select(COMPANY) %>%
group_by("?New York Times") %>%
summarize(Total = sum(Salary, na.rm=TRUE))
#1: Build a table for NewYorkTimes employees
MediaBucks %>%
select(COMPANY) %>%
group_by("?New York Times") %>%
#1: Build a table for NewYorkTimes employees
summary(NewYorkTimes$Salary)
#1: Build a table for NewYorkTimes employees
summary(New York Times$Salary)
#1: Build a table for NewYorkTimes employees
summary(NewYorkTimes$Salary)
View(MediaBucks)
#1: Build a table for NewYorkTimes employees
summary(NYT$Salary)
#1: Build a table for NewYorkTimes employees
NYT <- subset(MediaBucks, COMPANY=="NewYorkTimes")
View(NYT)
#1: Build a table for NewYorkTimes employees
NYT <- subset(MediaBucks, COMPANY=="NewYorkTimes")
MediaBucks %>%
select(COMPANY) %>%
group_by(NYT) %>%
summarize(Total = sum(Salary, na.rm=TRUE))
View(NYT)
#1: Build a table for NewYorkTimes employees
NYT <- subset(MediaBucks, COMPANY=="NewYorkTimes")
NYT %>%
count(Race) %>%
arrange(desc(n))
#2: Determine median salary of NewYorkTimes employees
summary(NYT$Salary)
View(NYT)
View(NYT)
#3: Identify title, gender and race of the highest paid position at NYT
NYT %>%
Select(Title,Salary,Race,Gender)
#3: Identify title, gender and race of the highest paid position at NYT
NYT %>%
select(Title,Salary,Race,Gender)
View(NYT)
#3: Identify title, gender and race of the highest paid position at NYT
NYT %>%
select(TITLE,Salary,Race,Gender)
count(Salary) %>%
arrange(desc(n))
View(NYT)
#3: Identify title, gender and race of the highest paid position at NYT
NYT %>%
select(TITLE,Salary,Race,Gender)
count(Salary) %>%
arrange(asc(n))
#3: Identify title, gender and race of the highest paid position at NYT
NYT %>%
select(TITLE,Salary,Race,Gender)
count(Salary) %>%
arrange(desc(n))
#3: Identify title, gender and race of the highest paid position at NYT
NYT %>%
select(TITLE,Salary,Race,Gender)
arrange(desc(n))
#3: Identify title, gender and race of the highest paid position at NYT
NYT %>%
select(TITLE,Salary,Race,Gender)
group_by(Salary)
#3: Identify title, gender and race of the highest paid position at NYT
NYT %>%
select(TITLE,Salary,Race,Gender)
arrange(desc(n))
#4: Build a table that filters "Business" in the Company column. Determine Summary of the Salary column.
MediaBucks %>%
select(COMPANY) %>%
filter("Business") %>%
#Build a second table that filters "Bloomberg" in the Company column.  Determine Summary of the Salary column.
#Which one is higher?
#4: Build a table that filters "Business" in the Company column. Determine Summary of the Salary column.
MediaBucks %>%
select(COMPANY) %>%
filter(Business) %>%
#Build a second table that filters "Bloomberg" in the Company column.  Determine Summary of the Salary column.
#Which one is higher?
#4: Build a table that filters "Business" in the Company column. Determine Summary of the Salary column.
MediaBucks %>%
select(COMPANY) %>%
filter(Business) %>%
Summary(Salary)
View(MediaSalary)
#4: Build a table that filters "Business" in the Company column. Determine Summary of the Salary column.
MediaBucks %>%
select(COMPANY) %>%
filter(Business) %>%
Summary(Salary)
#4: Build a table that filters "Business" in the Company column. Determine Summary of the Salary column.
MediaBucks %>%
select(COMPANY) %>%
filter("Business") %>%
Summary(Salary)
#4: Build a table that filters "Business" in the Company column. Determine Summary of the Salary column.
MediaBucks %>%
select(COMPANY)
filter("Business")
#4: Build a table that filters "Business" in the Company column. Determine Summary of the Salary column.
MediaBucks %>%
select(COMPANY)
filter(Business)
#4: Build a table that filters "Business" in the Company column. Determine Summary of the Salary column.
MediaBucks %>%
select(COMPANY)
filter(Business)
#4: Build a table that filters "Business" in the Company column. Determine Summary of the Salary column.
#Build a second table that filters "Bloomberg" in the Company column.  Determine Summary of the Salary column.
MediaBucks %>%
select(COMPANY)
filter(Bloomberg)
#4: Build a table that filters "Business" in the Company column. Determine Summary of the Salary column.
#Build a second table that filters "Bloomberg" in the Company column.  Determine Summary of the Salary column.
MediaBucks %>%
select(COMPANY)
filter("Bloomberg")
#4: Build a table that filters "Business" in the Company column. Determine Summary of the Salary column.
#Build a second table that filters "Bloomberg" in the Company column.  Determine Summary of the Salary column.
MediaBucks %>%
select(COMPANY)
Bloomberg <- subset(MediaBucks, COMPANY=="Bloomberg")
Summary(Salary)
#4: Build a table that filters "Business" in the Company column. Determine Summary of the Salary column.
#Build a second table that filters "Bloomberg" in the Company column.  Determine Summary of the Salary column.
MediaBucks %>%
select(COMPANY)
Bloomberg <- subset(MediaBucks, COMPANY=="Bloomberg")
Summary(Salary)
#4: Build a table that filters "Business" in the Company column. Determine Summary of the Salary column.
#Build a second table that filters "Bloomberg" in the Company column.  Determine Summary of the Salary column.
MediaBucks %>%
select(COMPANY,Salary)
Bloomberg <- subset(MediaBucks, COMPANY=="Bloomberg")
Summary(Salary)
View(Bloomberg)
#4: Build a table that filters "Business" in the Company column. Determine Summary of the Salary column.
MediaBucks %>%
select(COMPANY,Salary)
Business <- subset(MediaBucks, COMPANY=="Business")
Summary(Salary)
#4: Build a table that filters "Business" in the Company column. Determine Summary of the Salary column.
MediaBucks %>%
select(COMPANY,Salary)
Business <- subset(MediaBucks, COMPANY=="Business")
#Build a second table that filters "Bloomberg" in the Company column.  Determine Summary of the Salary column.
MediaBucks %>%
select(COMPANY,Salary)
Bloomberg <- subset(MediaBucks, COMPANY=="Bloomberg")
Summary(Salary)
#4: Build a table that filters "Business" in the Company column. Determine Summary of the Salary column.
MediaBucks %>%
select(COMPANY,Salary)
Business <- subset(MediaBucks, COMPANY=="Business")
#Build a second table that filters "Bloomberg" in the Company column.  Determine Summary of the Salary column.
MediaBucks %>%
select(COMPANY,Salary)
Bloomberg <- subset(MediaBucks, COMPANY=="Bloomberg")
#Which one is higher?
View(Business)
View(Bloomberg)
View(Bloom)
View(WSJ)
View(Business)
View(Business)
#3: Identify title, gender and race of the highest paid position at NYT
Business <- subset(MediaBucks, grepl("?Business", COMPANY))
#Executive Editor, News - Black, no gender indicated
#3: Identify title, gender and race of the highest paid position at NYT
Business <- subset(MediaBucks, grepl("?Business", COMPANY))
#Executive Editor, News - Black, no gender indicated
View(Business)
View(NYT)
View(Business)
#4: Build a table that filters "Business" in the Company column. Determine Summary of the Salary column.
MediaBucks %>%
select(COMPANY,Salary)
Business <- subset(MediaBucks, COMPANY=="Business")
#Build a second table that filters "Bloomberg" in the Company column.  Determine Summary of the Salary column.
MediaBucks %>%
select(COMPANY,Salary)
Bloomberg <- subset(MediaBucks, COMPANY=="Bloomberg")
#Which one is higher?
#4: Build a table that filters "Business" in the Company column. Determine Summary of the Salary column.
MediaBucks %>%
Business <- subset(MediaBucks, grepl("Business", COMPANY))
#4: Build a table that filters "Business" in the Company column. Determine Summary of the Salary column.
Business <- subset(MediaBucks, grepl("Business", COMPANY))
#Build a second table that filters "Bloomberg" in the Company column.  Determine Summary of the Salary column.
MediaBucks %>%
select(COMPANY,Salary)
Bloomberg <- subset(MediaBucks, COMPANY=="Bloomberg")
#Which one is higher?
#4: Build a table that filters "Business" in the Company column. Determine Summary of the Salary column.
Business <- subset(MediaBucks, grepl("?Business", COMPANY))
#Build a second table that filters "Bloomberg" in the Company column.  Determine Summary of the Salary column.
Bloomberg <- subset(MediaBucks, grepl("?Bloomberg", COMPANY))
#Which one is higher?
#4: Build a table that filters "Business" in the Company column. Determine Summary of the Salary column.
Business <- subset(MediaBucks, grepl("?Business", COMPANY))
summary(Business$Salary)
#Build a second table that filters "Bloomberg" in the Company column.  Determine Summary of the Salary column.
Bloomberg <- subset(MediaBucks, grepl("?Bloomberg", COMPANY))
summary(Bloomberg$Salary)
#Which one is higher?
BigBoys <- filter(MediaSalary, COMPANY %in% c("NewYorkTimes", "WallStreetJournal", "Bloomberg"))
Reporters <- subset(MediaBucks, grepl("?reporter", TITLE))
summary(Reporters$Salary)
BigBoys <- filter(MediaSalary, COMPANY %in% c("NewYorkTimes", "WallStreetJournal", "Bloomberg"))
View(BigBoys)
WSJ_Black <- MediaBucks %>% filter(Race =="black", COMPANY == "WallStreetJournal")
MediaBucks %>%
select(Race, Salary) %>%
group_by(Race) %>%
summarize(Avg_Salary = mean(Salary, na.rm=TRUE)) %>%
arrange(desc(Avg_Salary))
MediaBucks %>%
count(Race) %>%
arrange(desc(n))
MediaBucks %>%
select(Race, Salary) %>%
group_by(Race) %>%
summarize(Total=n(),
Avg = mean(Salary, na.rm=TRUE)) %>%
arrange(desc(Total))
#details: https://stackoverflow.com/questions/36183601/average-and-count-with-aggregation-in-r-with-dplyr
#1: Who is making $230,504 as a reporter???
#2: Make a table for editors, figure out medians.
Editors <- subset(MediaBucks, grepl("?editor", TITLE))
summary(Editors$Salary)
#3: Find highest paid editor. Resent them.
#4: Make a table for any position involving data
View(BigBoys)
View(Editors)
View(BigBoys)
#1: Who is making $230,504 as a reporter???
#Not me, sadly
#Actually a section editor for WSJ
#2: Make a table for editors, figure out medians.
Editors <- subset(MediaBucks, grepl("?editor", TITLE))
summary(Editors$Salary)
#3: Find highest paid editor. Resent them.
Editors %>%
select(Title,Company,Salary) %>%
group_by(Salary) %>%
arrange(desc())
#1: Who is making $230,504 as a reporter???
#Not me, sadly
#Actually a section editor for WSJ
#2: Make a table for editors, figure out medians.
Editors <- subset(MediaBucks, grepl("?editor", TITLE))
summary(Editors$Salary)
#3: Find highest paid editor. Resent them.
Editors %>%
select(Title,Company,Salary) %>%
group_by(Salary) %>%
arrange(desc)
View(BigBoys)
#1: Who is making $230,504 as a reporter???
#Not me, sadly
#Actually a section editor for WSJ
#2: Make a table for editors, figure out medians.
Editors <- subset(MediaBucks, grepl("?editor", TITLE))
summary(Editors$Salary)
#3: Find highest paid editor. Resent them.
Editors %>%
select(TITLE,COMPANY,Salary) %>%
group_by(Salary) %>%
arrange(desc)
#1: Who is making $230,504 as a reporter???
#Not me, sadly
#Actually a section editor for WSJ
#2: Make a table for editors, figure out medians.
Editors <- subset(MediaBucks, grepl("?editor", TITLE))
summary(Editors$Salary)
#3: Find highest paid editor. Resent them.
Editors %>%
select(TITLE,COMPANY,Salary) %>%
group_by(Salary) %>%
arrange(desc(Salary))
#4: Make a table for any position involving data
#1: Who is making $230,504 as a reporter???
#Not me, sadly
#Actually a section editor for WSJ
#2: Make a table for editors, figure out medians.
Editors <- subset(MediaBucks, grepl("?editor", TITLE))
summary(Editors$Salary)
#3: Find highest paid editor. Resent them.
Editors %>%
select(TITLE,COMPANY,Salary) %>%
group_by(Salary,TITLE,COMPANY) %>%
arrange(desc(Salary))
#4: Make a table for any position involving data
#1: Who is making $230,504 as a reporter???
#Not me, sadly
#Actually it's a section editor for WSJ
#2: Make a table for editors, figure out medians.
Editors <- subset(MediaBucks, grepl("?editor", TITLE))
summary(Editors$Salary)
#3: Find highest paid editor. Resent them.
Editors %>%
select(TITLE,COMPANY,Salary) %>%
group_by(Salary,TITLE,COMPANY) %>%
arrange(desc(Salary))
#4: Make a table for any position involving data
Data <- subset(MediaBucks, grepl("?data", TITLE))
summary(Data$Salary)
